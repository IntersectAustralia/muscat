<%
  last_canonic_technique_for_source = tag == tag.parent.fetch_all_by_tag(tag.tag).last
  a_tag = tag.fetch_first_by_tag(:a)
  b_tag = tag.fetch_first_by_tag(:b)
  c_tag = tag.fetch_first_by_tag(:c)
  d_tag = tag.fetch_first_by_tag(:d)

  # Repeated Fields
  # e_tag = tag.fetch_first_by_tag(:e)
  # f_tag = tag.fetch_first_by_tag(:f)
  # g_tag = tag.fetch_first_by_tag(:g)
  # h_tag = tag.fetch_first_by_tag(:h)
  # o_tag = tag.fetch_first_by_tag(:o)

  ee_tag = tag.fetch_all_by_tag(:e)
  ff_tag = tag.fetch_all_by_tag(:f)
  gg_tag = tag.fetch_all_by_tag(:g)
  hh_tag = tag.fetch_all_by_tag(:h)
  oo_tag = tag.fetch_all_by_tag(:o)
  type = nil
  if a_tag && a_tag.content
    type = a_tag.content
    if (b_tag && b_tag.content) && (c_tag && c_tag.content) && (d_tag && d_tag.content)
      type = type + ': ' + c_tag.content + ' ' + d_tag.content + ' ' + b_tag.content
    end
  end

  interval = []
  temporal_offset = []
  if ee_tag.length == 0 && ff_tag.length == 0
    ff_tag.each_with_index do | tag_f, f_index|
      e_and_f_tag = ' ' + ' ' + ' '
      interval.push(e_and_f_tag)
    end
  end
  if ee_tag.length == 0 && ff_tag.length == 1
    ff_tag.each_with_index do | tag_f, f_index|
        e_and_f_tag = ' ' + ' ' + tag_f.content
        interval.push(e_and_f_tag)
      end
   end
  if ee_tag.length == 1 && ff_tag.length == 0
    ee_tag.each_with_index do | tag_e, e_index|
      e_and_f_tag = ' ' + ' ' + tag_e.content
      interval.push(e_and_f_tag)
    end
  end

   ee_tag.each_with_index do | tag_e, e_index|
     ff_tag.each_with_index do | tag_f, f_index|
      if e_index == f_index
        e_and_f_tag = tag_e.content + ' ' + tag_f.content
        interval.push(e_and_f_tag)
      end
     end
   end

  if gg_tag.length == 0 && hh_tag.length == 0 && oo_tag.length ==0
      g_tag_and_h_tag_and_o_tag = ' ' + ' ' + ' ' + ' '
      temporal_offset.push(g_tag_and_h_tag_and_o_tag)
  elsif gg_tag.length == 1 && hh_tag.length == 0 && oo_tag.length ==0
    tag_g = tag.fetch_first_by_tag(:g)
    g_tag_and_h_tag_and_o_tag = tag_g.content + ' ' + ' ' + ' in ' + ' '
    temporal_offset.push(g_tag_and_h_tag_and_o_tag)
  elsif gg_tag.length == 0 && hh_tag.length == 1 && oo_tag.length ==0
    tag_h = tag.fetch_first_by_tag(:h)
    g_tag_and_h_tag_and_o_tag = ' ' + ' ' + tag_h.content + ' in ' + ' '
    temporal_offset.push(g_tag_and_h_tag_and_o_tag)
  elsif gg_tag.length == 0 && hh_tag.length == 0 && oo_tag.length ==1
    tag_o = tag.fetch_first_by_tag(:o)
    g_tag_and_h_tag_and_o_tag = ' ' + ' ' + ' ' + ' in ' + tag_o.content
    temporal_offset.push(g_tag_and_h_tag_and_o_tag)
  elsif gg_tag.length == 1 && hh_tag.length == 1 && oo_tag.length ==0
    g_tag = tag.fetch_first_by_tag(:g)
    h_tag = tag.fetch_first_by_tag(:h)
    g_tag_and_h_tag_and_o_tag = g_tag.content + ' ' + h_tag.content + ' in ' + ' '
    temporal_offset.push(g_tag_and_h_tag_and_o_tag)
  elsif gg_tag.length == 1 && hh_tag.length == 0 && oo_tag.length ==1
    tag_g = tag.fetch_first_by_tag(:g)
    tag_o = tag.fetch_first_by_tag(:o)
    g_tag_and_h_tag_and_o_tag = tag_g.content + ' ' + ' ' + ' in ' + tag_o.content
    temporal_offset.push(g_tag_and_h_tag_and_o_tag)
  elsif gg_tag.length == 0 && hh_tag.length == 1 && oo_tag.length ==1
    tag_h = tag.fetch_first_by_tag(:h)
    tag_o = tag.fetch_first_by_tag(:o)
    g_tag_and_h_tag_and_o_tag = ' ' + ' ' + tag_h.content + ' in ' + tag_o.content
    temporal_offset.push(g_tag_and_h_tag_and_o_tag)
  end
  if gg_tag.length > 0 && hh_tag.length > 0 && oo_tag.length >0
   gg_tag.each_with_index do |tag_g, g_index|
     hh_tag.each_with_index do |tag_h, h_index|
       oo_tag.each_with_index do |tag_o, o_index|
         if g_index == h_index and g_index == o_index
             g_tag_and_h_tag_and_o_tag = tag_g.content + ' ' + tag_h.content + ' in ' + tag_o.content
             temporal_offset.push(g_tag_and_h_tag_and_o_tag)
       end
       end
     end
     end
   end
  # Printing single tags on the view - code used before updating to multiple tags
   # if e_tag && e_tag.content
   #   interval = e_tag.content
   #   if f_tag && f_tag.content
   #     interval = interval + ' ' + f_tag.content
   #   end
   # end

   # if g_tag && g_tag.content
   #   temporal_offset = g_tag.content
   #   if h_tag && h_tag.content
   #     temporal_offset = temporal_offset + ' ' + h_tag.content
   #   end
   #
   #   if o_tag && o_tag.content
   #     temporal_offset = temporal_offset + ' in ' + o_tag.content
   #   end
   # end
-%>

<% unless type.nil? && interval.nil? && temporal_offset.nil? %>
  <% unless type.nil? %>
      <tr class="row">
        <th>
         <%= I18n.t(:display_canon_type) %>
        </th>
        <td>
          <%= type %>
        </td>
      </tr>
  <% end %>

  <%interval.each_with_index do |interval, interval_index| %>
    <%temporal_offset.each_with_index  do |t_o, t_o_index| %>
      <%if interval_index == t_o_index %>
      <% unless interval.nil? %>
          <tr class="row">
            <th>
              <%= I18n.t(:display_interval) %>
            </th>
            <td>
              <%= interval %>
            </td>
          </tr>
        <% end %>

      <% unless t_o.nil? %>
        <tr class="row">
          <th>
            <%= I18n.t(:display_temporal_offset) %>
          </th>
          <td>
            <%= t_o %>
          </td>
        </tr>

          <%end %>
      <% end %>
    <% end %>
  <% end %>


<!-- Code that prints only first item of each MARC tag (previous design) -->

  <%#interval.each_with_index do |interval, interval_index| %>
    <%# unless interval.nil? %>
<!--      <tr class="row">-->
<!--        <th>-->
          <%#= I18n.t(:display_interval) %>
<!--        </th>-->
<!--        <td>-->
          <%#= interval %>
<!--        </td>-->
<!--      </tr>-->
    <%# end %>
  <%# end %>

  <%#temporal_offset.each_with_index  do |t_o, t_o_index| %>
    <%# unless t_o.nil? %>
<!--      <tr class="row">-->
<!--        <th>-->
          <%#= I18n.t(:display_temporal_offset) %>
<!--        </th>-->
<!--        <td>-->
          <%#= t_o %>
<!--        </td>-->
<!--      </tr>-->
    <%# end %>
  <%# end %>

  <%# unless temporal_offset.nil? %>
<!--      <tr class="row">-->
<!--        <th>-->
          <%#= I18n.t(:display_temporal_offset) %>
<!--        </th>-->
<!--        <td>-->
          <%#= temporal_offset %>
<!--        </td>-->

<!--      </tr>-->
  <%# end %>


  <% unless last_canonic_technique_for_source %>
    <tr class="row">
      <th colspan="2" style="border-top: 2px solid #cdcdcd; height: 1px; padding: 0; border-bottom: 0;"></th>
    </tr>
  <% end %>
<% end %>