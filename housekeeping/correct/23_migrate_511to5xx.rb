m511to518 = [
  400014664,
  400014676,
  400014677,
  400014678,
  400014680,
  400014681,
  400014682,
  400014683,
  400014684,
  400014707,
  400014708,
  400014709,
  400110500,
  400110798,
  400110804,
  400110816,
  400110820,
  400110845,
  400110846,
  400110847,
  402006530,
  402009518,
  402009667,
  402009680,
  402009681,
  402009690,
  402009697,
  402009698,
  402009700,
  402009701,
  402009702,
  402009703,
  402009704,
  402009705,
  402009706,
  402009707,
  402009713,
  402009714,
  402009715,
  402009716,
  402009717,
  402009778,
  402009780,
  402009827,
  402009828,
  402009829,
  402009830,
  402009831,
  402009832,
  402009870,
  402009876,
  402009881,
  402009883,
  402009894,
  402009931,
  402010875,
  402010876,
  402010877,
  402010878,
  402010879,
  402010880,
  402010882,
  406000056,
  406000140,
  407001361,
  407001445,
  407001483,
  407002246,
  407002581,
  407002627,
  407002630,
  407002702,
  407002703,
  407002704,
  407002705,
  407002706,
  407002707,
  407002708,
  407002712,
  407002713,
  407002714,
  407002715,
  407002716,
  407002717,
  407002718,
  407002720,
  407002721,
  407002722,
  407002723,
  407002724,
  407002725,
  407002726,
  407002966,
  408002969,
  408004963,
  409000515,
  409000516,
  409000521,
  409000522,
  409000523,
  409000524,
  409000525,
  409000527,
  409000528,
  409000529,
  409000530,
  409000531,
  409000532,
  409000533,
  409000536,
  409000537,
  409000539,
  409000562,
  409000566,
  409000567,
  409000568,
  409000569,
  409000570,
  409000571,
  409000572,
  409000573,
  409000574,
  409000575,
  409000576,
  409000577,
  409000578,
  409000579,
  409000580,
  409000581,
  409000582,
  409000641,
  409000642,
  409000643,
  409000644,
  409000645,
  409000646,
  409000648,
  409000649,
  409000650,
  409000651,
  409000654,
  409000680,
  409000681,
  409000697,
  409000698,
  409000700,
  409000701,
  409000702,
  409000703,
  409000704,
  409000713,
  409000718,
  409000719,
  409000720,
  409000721,
  409000727,
  409000728,
  409000729,
  409000730,
  409000731,
  409000732,
  409000733,
  409000744,
  409000746,
  409000747,
  409000748,
  409000749,
  409000750,
  409000751,
  409000752,
  409000753,
  409000756,
  409000757,
  409000758,
  409000759,
  409000760,
  409000776,
  409000777,
  409000778,
  409000779,
  409000781,
  409000782,
  409000783,
  409000784,
  409000790,
  409000791,
  409000792,
  409000793,
  409000795,
  409000796,
  409000797,
  409000798,
  409000800,
  409000801,
  409000802,
  409000803,
  409000805,
  409000806,
  409000807,
  409000808,
  409000809,
  409000810,
  409000811,
  409000812,
  409000814,
  409000815,
  409000816,
  409000817,
  409000818,
  409000819,
  409000820,
  409000821,
  409000864,
  409001405,
  409002941,
  410001704,
  410002001,
  410002002,
  410002856,
  410002865,
  410002873,
  410002882,
  410002887,
  410002888,
  410002889,
  410002890,
  410002891,
  410002892,
  410002893,
  410002894,
  410002895,
  410002896,
  410003989,
  410003992,
  410004064,
  410004100]

Source.where("marc_source LIKE ?", "%=511%").each do |s|

  s.paper_trail_event = "Migrate 511"

  marc = s.marc
  marc.load_source

  # To make a diff
  #File.write("diffmarc/old/" + s.id.to_s + '.txt', s.marc.to_marc)

  marc.by_tags("511").each do |t|
    ta = t.fetch_first_by_tag("a")
	
    if m511to518.include? s.id
      puts "#{s.id} to 518"
      new_tag = MarcNode.new("source", "518", "", "##")
      new_tag.add_at(MarcNode.new("source", "a", ta.content, nil), 0)
      new_tag.sort_alphabetically
      marc.root.children.insert(marc.get_insert_position("518"), new_tag)
    else
      new_tag = MarcNode.new("source", "500", "", "##")
      new_tag.add_at(MarcNode.new("source", "a", "Performance note: #{ta.content}", nil), 0)
      new_tag.sort_alphabetically
      marc.root.children.insert(marc.get_insert_position("500"), new_tag)
    end
  
    t.destroy_yourself
  end
  s.save
  ### Similarly for a diff 
  #File.write("diffmarc/new/" + s.id.to_s + '.txt', s.marc.to_marc)
end